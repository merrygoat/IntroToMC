##############
Curve fit
##############
import matplotlib.pyplot as plt
import numpy as np
from scipy.optimize import curve_fit
%matplotlib inline

def log_function(x, a, b):
    return a * np.log(x) + b

x_data, y_data = np.loadtxt("C:\\Users\\Peter\\Desktop\\sample_data2.txt", skiprows=1, unpack=True)
popt, pcov = curve_fit(log_function, x_data, y_data)
print(popt)

x_fit = np.arange(1, 10, 0.01)
y_fit = log_function(x_fit, popt[0], popt[1])

plt.plot(x_data, y_data, marker="x", markersize=10, linewidth=0)
plt.plot(x_fit, y_fit, linewidth=2)
plt.xlabel("Weight of African Swallow (oz)", fontsize=12)
plt.ylabel("Carrying Capacity (lb)", fontsize=12)
plt.show()


##############
Task 1:
##############

import numpy as np
from math import ceil

max_lim = 10000

# Array represents numbers 1 to maxlim. 1 is prime zero is not. Add 1 so that indices match numbers.
array = np.ones(max_lim + 1)

# Zero and one are not prime
array[0] = 0
array[1] = 0

for i in range(2, max_lim):
    #if a number is marked as prime
    if array[i] == 1:
        #all of its multiples are not prime
        j = 2
        while i * j < max_lim+1:
            array[j * i] = 0
            j += 1

print(np.sum(array))

##############
Task 2:
##############
import numpy as np

inputfile = open("sample_data3.txt", 'r')

names = []

for line in inputfile:
    names.append(line.strip())
    
names.sort()    

total = 0
for counter, name in enumerate(names):
    sum  = 0
    for letter in name:
        sum += (ord(letter.lower())-96)
    word_score = (counter+1) * sum
    total += word_score
    
print(total)